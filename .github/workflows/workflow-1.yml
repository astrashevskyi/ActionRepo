name: workflow-1

on:
#  pull_request:
#    branches:
#      - main
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      arg:
        type: string
        description: a workflow input
        required: true
        default: default_value

permissions:
  id-token: write
  actions: write
  contents: read
  pull-requests: write
  checks: write
  statuses: write

jobs:
  run-workflow-1:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/test')
    runs-on: ubuntu-latest
    steps:
      - name: Get PR branch
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

      - name: Set latest commit status as pending
        uses: myrotvorets/set-commit-status-action@master
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: pending

      - name: Checkout PR branch
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}

      - name: "Execute test"
        run: |
          exit 1
#          echo "test executed"

      - name: Set latest commit status as ${{ job.status }}
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
#      - name: Add comment to PR
#        uses: actions/github-script@v6
#        if: always()
#        with:
#          script: |
#            const name = '${{ github.workflow   }}';
#            const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
#            const success = '${{ job.status }}' === 'success';
#            const body = `${name}: ${success ? 'succeeded ✅' : 'failed ❌'}\n${url}`;
#
#            await github.rest.issues.createComment({
#              issue_number: context.issue.number,
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              body: body
#            })

      - name: Add Check run
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            await github.rest.checks.create({
              repo: context.repo.repo,
              name: 'Custom Check run',
              head_sha: context.sha,
              status: 'completed',
              conclusion: 'success',
              output: {
                title: 'title',
                summary: 'summary'
              }
            })
