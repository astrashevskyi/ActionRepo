name: listening-workflow
run-name: "Workflow run processing"

on:
  workflow_run:
    workflows: ["workflow-1"]
    types:
      - completed

jobs:
  process-workflow-completion:
    runs-on: ubuntu-latest
    steps:
      - name: Map run conclusion to commit state
        run: |
         case ${{ github.event.workflow_run.conclusion }} in
            success)
               result=success;;
            failure|neutral|cancelled|timed_out|action_required|stale|null|skipped)
               result=failure;;
            startup_failure)
               result=error;;
         esac
         echo "COMMIT_STATE=$result" >> $GITHUB_ENV

      - name: Set commit status
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{secrets.GITHUB_TOKEN}}
          context: ${{ github.event.workflow_run.name }}
          state: ${{ env.COMMIT_STATE }}
          target_url: ${{ github.event.workflow_run.html_url }}
          sha: ${{ github.event.workflow_run.head_sha }}
      - name: Show pullrequests
        run: |
          echo ${{ github.event.workflow_run.pull_requests[0].number }}
      - name: Add comment to PR
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            //let pr_numbers = [${{ github.event.workflow_run.pull_requests[0].number }}]
            let pr_numbers = [context.payload.workflow_run.pull_requests[0].number }}]
            const name = '${{ github.event.workflow_run.name }}';
            const url = '${{ github.event.workflow_run.html_url }}';
            const success = '${{ github.event.workflow_run.conclusion }}' === 'success';
            const body = `${name}: ${success ? 'succeeded ✅' : 'failed ❌'}\n${url}`;

            for(const pr of pr_numbers) {
              await github.rest.issues.createComment({
                issue_number: pr,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              })
            }
